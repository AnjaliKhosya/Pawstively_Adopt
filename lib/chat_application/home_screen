import 'dart:convert';

import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:flutter/material.dart';
import 'package:pet_adoption/chat_application/profile_screen.dart';
import '../api/apis.dart';
import '../models/chat_user.dart';
import '../widgets/chatuser_card.dart';
class home_screen extends StatefulWidget {
  VoidCallback opendrawer;
  home_screen(this.opendrawer);
  @override
  State<home_screen> createState() => _home_screenState();
}

class _home_screenState extends State<home_screen> {
  late ChatUser chatuser;
  void initState()
  {
      super.initState();
      APIs.getSelfIndfo();
  }
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      home: Scaffold(
        appBar: AppBar(
         title: const Text('Messages',style: TextStyle(
           fontSize: 19,
           fontWeight: FontWeight.normal,
           color: Colors.black,
         )),
          centerTitle: true,
          elevation: 1,
          iconTheme: IconThemeData(
            color: Colors.black,
          ),
          backgroundColor: Colors.white,
          leading: IconButton(
            icon: Icon(Icons.arrow_back),
            onPressed: (){
              widget.opendrawer();
            },),
          actions: [
            IconButton(onPressed: (){}, icon: const Icon(Icons.search)),
            IconButton(onPressed: (){
              Navigator.push(context, MaterialPageRoute(builder: (_)=>profile_screeen(APIs.me)));
            }, icon: const Icon(Icons.more_vert)),
          ],
        ),

        floatingActionButton: Padding(
          padding: const EdgeInsets.only(bottom: 10,right: 8),
          child: FloatingActionButton(
            onPressed: (){},
            child: Icon(Icons.add_comment_rounded),
          ),

        ),

        body: StreamBuilder<QuerySnapshot>(
          stream: APIs.getallUsers(),
          builder: (context, snapshot) {
            if(snapshot.connectionState == ConnectionState.waiting)
              {
                return Center(child: CircularProgressIndicator());
              }
            if(snapshot.hasError)
              {
                return Text('Error: ${snapshot.error}');
              }
            if(!snapshot.hasData)
              {
                return Text('No data available');
              }
            final data = snapshot.data?.docs;

            return ListView.builder(
                itemCount: data?.length,
                physics: BouncingScrollPhysics(),
                itemBuilder: (context,index){
                  final userData = data?[index].data() as Map<String,dynamic>;
                  chatuser = ChatUser.fromJson(userData);
                  print('Data: ${chatuser}');
                  return ChatUserCard(chatuser);
                });
          }),
        ),
    );
  }
}
